{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNIL\\\\OneDrive\\\\Desktop\\\\copy\\\\client\\\\src\\\\components\\\\NewItem\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewItem = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    title: '',\n    size: '',\n    condition: ''\n  });\n  const [image, setImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState('');\n  const [preferences, setPreferences] = useState([]);\n  const [newPreference, setNewPreference] = useState('');\n  const [error, setError] = useState('');\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n\n    if (file) {\n      setImage(file);\n      setPreviewImage(URL.createObjectURL(file));\n    }\n  };\n\n  const handleAddPreference = () => {\n    if (newPreference.trim() && !preferences.includes(newPreference)) {\n      setPreferences(prev => [...prev, newPreference]);\n      setNewPreference('');\n    }\n  };\n\n  const handleDeletePreference = preference => {\n    setPreferences(prev => prev.filter(pref => pref !== preference));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!formData.title || !formData.size || !formData.condition || !image || preferences.length === 0) {\n      setError('Please fill all fields.');\n      return;\n    }\n\n    setError('');\n    const formDataToSend = new FormData();\n    formDataToSend.append('title', formData.title);\n    formDataToSend.append('size', formData.size);\n    formDataToSend.append('condition', formData.condition);\n    formDataToSend.append('preferences', JSON.stringify(preferences));\n    formDataToSend.append('image', image);\n\n    try {\n      const response = await fetch('http://localhost:8080/api/products', {\n        method: 'POST',\n        body: formDataToSend\n      });\n\n      if (response.ok) {\n        alert('Product added successfully!');\n        navigate('/items');\n      } else {\n        const data = await response.json();\n        alert(`Failed to add product: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewItem, \"mPMsx4SAxXrYoKbB/Kbx/FEpRCA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewItem;\nexport default NewItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewItem\");","map":{"version":3,"sources":["C:/Users/SUNIL/OneDrive/Desktop/copy/client/src/components/NewItem/index.jsx"],"names":["React","useState","useNavigate","styles","NewItem","navigate","formData","setFormData","title","size","condition","image","setImage","previewImage","setPreviewImage","preferences","setPreferences","newPreference","setNewPreference","error","setError","handleInputChange","e","name","value","target","prev","handleImageChange","file","files","URL","createObjectURL","handleAddPreference","trim","includes","handleDeletePreference","preference","filter","pref","handleSubmit","preventDefault","length","formDataToSend","FormData","append","JSON","stringify","response","fetch","method","body","ok","alert","data","json","message","console","container"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\n\r\nconst NewItem = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    size: '',\r\n    condition: '',\r\n  });\r\n  const [image, setImage] = useState(null);\r\n  const [previewImage, setPreviewImage] = useState('');\r\n  const [preferences, setPreferences] = useState([]);\r\n  const [newPreference, setNewPreference] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setPreviewImage(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleAddPreference = () => {\r\n    if (newPreference.trim() && !preferences.includes(newPreference)) {\r\n      setPreferences((prev) => [...prev, newPreference]);\r\n      setNewPreference('');\r\n    }\r\n  };\r\n\r\n  const handleDeletePreference = (preference) => {\r\n    setPreferences((prev) => prev.filter((pref) => pref !== preference));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!formData.title || !formData.size || !formData.condition || !image || preferences.length === 0) {\r\n      setError('Please fill all fields.');\r\n      return;\r\n    }\r\n    setError('');\r\n\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append('title', formData.title);\r\n    formDataToSend.append('size', formData.size);\r\n    formDataToSend.append('condition', formData.condition);\r\n    formDataToSend.append('preferences', JSON.stringify(preferences));\r\n    formDataToSend.append('image', image);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/products', {\r\n        method: 'POST',\r\n        body: formDataToSend,\r\n      });\r\n      if (response.ok) {\r\n        alert('Product added successfully!');\r\n        navigate('/items');\r\n      } else {\r\n        const data = await response.json();\r\n        alert(`Failed to add product: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {/* Form code identical to earlier */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewItem;\r\n"]},"metadata":{},"sourceType":"module"}