{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNIL\\\\OneDrive\\\\Desktop\\\\copy\\\\client\\\\src\\\\components\\\\Items\\\\ProductList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductList = _ref => {\n  _s();\n\n  let {\n    refresh\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  const [toggleRefresh, setToggleRefresh] = useState(refresh);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/products');\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        setProducts(data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n\n    fetchProducts();\n  }, [toggleRefresh]);\n\n  const handleNewProduct = () => {\n    setToggleRefresh(!toggleRefresh); // Toggles refresh to update the product list\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => {\n        var _product$preferences;\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: product.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Size: \", product.size]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Condition: \", product.condition]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Preferences: \", (_product$preferences = product.preferences) === null || _product$preferences === void 0 ? void 0 : _product$preferences.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Posted by:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 28\n            }, this), \" \", product.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8080/uploads/${product.image}`,\n            alt: product.title,\n            width: \"200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Posted on: \", new Date(product.postedDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, product._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductList, \"zQktVsFyjKURmWhPa6XW4M5DFUU=\");\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["C:/Users/SUNIL/OneDrive/Desktop/copy/client/src/components/Items/ProductList/index.jsx"],"names":["React","useEffect","useState","ProductList","refresh","products","setProducts","toggleRefresh","setToggleRefresh","fetchProducts","response","fetch","ok","Error","data","json","error","console","handleNewProduct","map","product","title","size","condition","preferences","join","username","image","Date","postedDate","toLocaleDateString","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,WAAW,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAACE,OAAD,CAAlD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,aAAa,GAAG,YAAY;AAC9B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,YAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB,MAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AAClB,cAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAT,QAAAA,WAAW,CAACQ,IAAD,CAAX;AACH,OALD,CAKE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACH;AACJ,KATD;;AAWAP,IAAAA,aAAa;AAChB,GAbQ,EAaN,CAACF,aAAD,CAbM,CAAT;;AAeA,QAAMW,gBAAgB,GAAG,MAAM;AAC3BV,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB,CAD2B,CACO;AACrC,GAFD;;AAIA,sBACI;AAAA,2BACI;AAAA,gBACKF,QAAQ,CAACc,GAAT,CAAcC,OAAD;AAAA;;AAAA,4BACV;AAAA,kCACI;AAAA,sBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,iCAAUD,OAAO,CAACE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sCAAeF,OAAO,CAACG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,gEAAiBH,OAAO,CAACI,WAAzB,yDAAiB,qBAAqBC,IAArB,CAA0B,IAA1B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,oCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,OAAgCL,OAAO,CAACM,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AACI,YAAA,GAAG,EAAG,iCAAgCN,OAAO,CAACO,KAAM,EADxD;AAEI,YAAA,GAAG,EAAEP,OAAO,CAACC,KAFjB;AAGI,YAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,kBANJ,eAWI;AAAA,sCAAe,IAAIO,IAAJ,CAASR,OAAO,CAACS,UAAjB,EAA6BC,kBAA7B,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA,WAASV,OAAO,CAACW,GAAjB;AAAA;AAAA;AAAA;AAAA,gBADU;AAAA,OAAb;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA5CD;;GAAM5B,W;;KAAAA,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ProductList = ({ refresh }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [toggleRefresh, setToggleRefresh] = useState(refresh);\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/api/products');\r\n                if (!response.ok) throw new Error('Network response was not ok');\r\n                const data = await response.json();\r\n                setProducts(data);\r\n            } catch (error) {\r\n                console.error('Error fetching products:', error);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n    }, [toggleRefresh]);\r\n\r\n    const handleNewProduct = () => {\r\n        setToggleRefresh(!toggleRefresh); // Toggles refresh to update the product list\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {products.map((product) => (\r\n                    <li key={product._id}>\r\n                        <h2>{product.title}</h2>\r\n                        <p>Size: {product.size}</p>\r\n                        <p>Condition: {product.condition}</p>\r\n                        <p>Preferences: {product.preferences?.join(', ')}</p>\r\n                        <p><strong>Posted by:</strong> {product.username}</p>\r\n                        <img\r\n                            src={`http://localhost:8080/uploads/${product.image}`}\r\n                            alt={product.title}\r\n                            width=\"200\"\r\n                        />\r\n                        <p>Posted on: {new Date(product.postedDate).toLocaleDateString()}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;\r\n"]},"metadata":{},"sourceType":"module"}