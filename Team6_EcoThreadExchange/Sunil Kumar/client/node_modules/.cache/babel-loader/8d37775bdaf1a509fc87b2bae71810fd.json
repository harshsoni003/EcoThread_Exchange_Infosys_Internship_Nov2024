{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNIL\\\\OneDrive\\\\Desktop\\\\copy\\\\client\\\\src\\\\components\\\\Items\\\\ProductList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductList = _ref => {\n  _s();\n\n  let {\n    refresh\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/products');\n        const data = await response.json();\n        setProducts(data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n\n    fetchProducts();\n  }, [refresh]); // Refresh when the parent component indicates a new product is added.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Size: \", product.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condition: \", product.condition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Preferences: \", product.preferences.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:8080/uploads/${product.image}`,\n          alt: product.title,\n          width: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted on: \", new Date(product.postedDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["C:/Users/SUNIL/OneDrive/Desktop/copy/client/src/components/Items/ProductList/index.jsx"],"names":["React","useEffect","useState","ProductList","refresh","products","setProducts","fetchProducts","response","fetch","data","json","error","console","map","product","title","size","condition","preferences","join","image","Date","postedDate","toLocaleDateString","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,WAAW,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACD;AACF,KARD;;AAUAL,IAAAA,aAAa;AACd,GAZQ,EAYN,CAACH,OAAD,CAZM,CAAT,CAHmC,CAepB;;AAEf,sBACE;AAAA,2BAEE;AAAA,gBACGC,QAAQ,CAACS,GAAT,CAAcC,OAAD,iBACZ;AAAA,gCACE;AAAA,oBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,+BAAUD,OAAO,CAACE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oCAAeF,OAAO,CAACG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,sCAAiBH,OAAO,CAACI,WAAR,CAAoBC,IAApB,CAAyB,IAAzB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AACE,UAAA,GAAG,EAAG,iCAAgCL,OAAO,CAACM,KAAM,EADtD;AAEE,UAAA,GAAG,EAAEN,OAAO,CAACC,KAFf;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBALF,eAUE;AAAA,oCAAe,IAAIM,IAAJ,CAASP,OAAO,CAACQ,UAAjB,EAA6BC,kBAA7B,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAAST,OAAO,CAACU,GAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtCD;;GAAMtB,W;;KAAAA,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ProductList = ({ refresh }) => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/api/products');\r\n        const data = await response.json();\r\n        setProducts(data);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, [refresh]); // Refresh when the parent component indicates a new product is added.\r\n\r\n  return (\r\n    <div>\r\n\r\n      <ul>\r\n        {products.map((product) => (\r\n          <li key={product._id}>\r\n            <h2>{product.title}</h2>\r\n            <p>Size: {product.size}</p>\r\n            <p>Condition: {product.condition}</p>\r\n            <p>Preferences: {product.preferences.join(', ')}</p>\r\n            <img\r\n              src={`http://localhost:8080/uploads/${product.image}`}\r\n              alt={product.title}\r\n              width=\"200\"\r\n            />\r\n            <p>Posted on: {new Date(product.postedDate).toLocaleDateString()}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n"]},"metadata":{},"sourceType":"module"}