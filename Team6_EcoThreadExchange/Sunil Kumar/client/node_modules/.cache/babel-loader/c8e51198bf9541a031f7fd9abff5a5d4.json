{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNIL\\\\OneDrive\\\\Desktop\\\\copy\\\\client\\\\src\\\\components\\\\NewItem\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n// src/components/NewItem/NewItem.jsx\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewItem = _ref => {\n  _s();\n\n  let {\n    onNewItemAdded\n  } = _ref;\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    title: '',\n    size: '',\n    condition: ''\n  });\n  const [image, setImage] = useState(null);\n  const [preferences, setPreferences] = useState([]);\n  const [newPreference, setNewPreference] = useState('');\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        setImage(reader.result); // Base64 representation of the image\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handlePreferenceAdd = () => {\n    if (newPreference) {\n      setPreferences([...preferences, newPreference]);\n      setNewPreference('');\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // Post data to the server\n      const response = await fetch('/api/products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ ...formData,\n          preferences,\n          image // Include image as Base64 string\n\n        })\n      });\n\n      if (response.ok) {\n        alert('Product added successfully');\n        setFormData({\n          title: '',\n          size: '',\n          condition: ''\n        }); // Reset form fields\n\n        setImage(null); // Reset image\n\n        setPreferences([]); // Reset preferences\n\n        onNewItemAdded && onNewItemAdded();\n      } else {\n        alert('An error occurred while adding the product.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while adding the product.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.newItemContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"size\",\n          value: formData.size,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Condition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"condition\",\n          value: formData.condition,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Preview\",\n          className: styles.imagePreview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPreference,\n          onChange: e => setNewPreference(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handlePreferenceAdd,\n          children: \"Add Preference\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: preferences.map((pref, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: pref\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewItem, \"aA8hKzAQhg8BLQ17E0CajBH2FW8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewItem;\nexport default NewItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewItem\");","map":{"version":3,"sources":["C:/Users/SUNIL/OneDrive/Desktop/copy/client/src/components/NewItem/index.jsx"],"names":["React","useState","useNavigate","styles","NewItem","onNewItemAdded","navigate","formData","setFormData","title","size","condition","image","setImage","preferences","setPreferences","newPreference","setNewPreference","handleInputChange","e","name","value","target","handleImageChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","handlePreferenceAdd","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","newItemContainer","formGroup","imagePreview","map","pref","index"],"mappings":"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","sourcesContent":["// src/components/NewItem/NewItem.jsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\n\r\nconst NewItem = ({ onNewItemAdded }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    size: '',\r\n    condition: '',\r\n  });\r\n  const [image, setImage] = useState(null);\r\n  const [preferences, setPreferences] = useState([]);\r\n  const [newPreference, setNewPreference] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImage(reader.result); // Base64 representation of the image\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handlePreferenceAdd = () => {\r\n    if (newPreference) {\r\n      setPreferences([...preferences, newPreference]);\r\n      setNewPreference('');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Post data to the server\r\n      const response = await fetch('/api/products', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          preferences,\r\n          image, // Include image as Base64 string\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Product added successfully');\r\n        setFormData({ title: '', size: '', condition: '' }); // Reset form fields\r\n        setImage(null); // Reset image\r\n        setPreferences([]); // Reset preferences\r\n        onNewItemAdded && onNewItemAdded();\r\n      } else {\r\n        alert('An error occurred while adding the product.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred while adding the product.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.newItemContainer}>\r\n      <h2>Add New Item</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={styles.formGroup}>\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Size</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"size\"\r\n            value={formData.size}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Condition</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"condition\"\r\n            value={formData.condition}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Image</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImageChange}\r\n          />\r\n          {image && <img src={image} alt=\"Preview\" className={styles.imagePreview} />}\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Preferences</label>\r\n          <input\r\n            type=\"text\"\r\n            value={newPreference}\r\n            onChange={(e) => setNewPreference(e.target.value)}\r\n          />\r\n          <button type=\"button\" onClick={handlePreferenceAdd}>\r\n            Add Preference\r\n          </button>\r\n          <ul>\r\n            {preferences.map((pref, index) => (\r\n              <li key={index}>{pref}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <button type=\"submit\">Post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewItem;\r\n"]},"metadata":{},"sourceType":"module"}