{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNIL\\\\OneDrive\\\\Desktop\\\\copy\\\\client\\\\src\\\\components\\\\NewItem\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewItem = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    title: '',\n    size: '',\n    condition: ''\n  });\n  const [image, setImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState('');\n  const [preferences, setPreferences] = useState([]);\n  const [newPreference, setNewPreference] = useState('');\n  const [error, setError] = useState('');\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n\n    if (file) {\n      setImage(file);\n      setPreviewImage(URL.createObjectURL(file));\n    }\n  };\n\n  const handleAddPreference = () => {\n    if (newPreference.trim() && !preferences.includes(newPreference)) {\n      setPreferences(prev => [...prev, newPreference]);\n      setNewPreference('');\n    }\n  };\n\n  const handleDeletePreference = preference => {\n    setPreferences(prev => prev.filter(pref => pref !== preference));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!formData.title || !formData.size || !formData.condition || !image || preferences.length === 0) {\n      setError('Please fill all fields.');\n      return;\n    }\n\n    setError('');\n    const formDataToSend = new FormData();\n    formDataToSend.append('title', formData.title);\n    formDataToSend.append('size', formData.size);\n    formDataToSend.append('condition', formData.condition);\n    formDataToSend.append('preferences', JSON.stringify(preferences));\n    formDataToSend.append('image', image);\n\n    try {\n      const response = await fetch('http://localhost:5000/api/products', {\n        method: 'POST',\n        body: formDataToSend\n      });\n\n      if (response.ok) {\n        alert('Product added successfully!');\n        navigate('/items');\n      } else {\n        alert('Failed to add product.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/items'),\n        className: styles.backButton,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.imagePreview,\n        children: previewImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewImage,\n          alt: \"Preview\",\n          className: styles.previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.placeholderImage,\n          children: \"No image selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Item Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              value: formData.title,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"size\",\n              value: formData.size,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Condition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"condition\",\n              value: formData.condition,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageChange,\n              className: styles.fileInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Preferences\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.preferenceInput,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newPreference,\n                onChange: e => setNewPreference(e.target.value),\n                placeholder: \"Add preference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleAddPreference,\n                className: styles.addPreferenceButton,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.preferences,\n              children: preferences.map((pref, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.preferenceContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.preference,\n                  children: pref\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleDeletePreference(pref),\n                  className: styles.deletePreferenceButton,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: styles.postButton,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewItem, \"mPMsx4SAxXrYoKbB/Kbx/FEpRCA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewItem;\nexport default NewItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewItem\");","map":{"version":3,"sources":["C:/Users/SUNIL/OneDrive/Desktop/copy/client/src/components/NewItem/index.jsx"],"names":["React","useState","useNavigate","styles","NewItem","navigate","formData","setFormData","title","size","condition","image","setImage","previewImage","setPreviewImage","preferences","setPreferences","newPreference","setNewPreference","error","setError","handleInputChange","e","name","value","target","prev","handleImageChange","file","files","URL","createObjectURL","handleAddPreference","trim","includes","handleDeletePreference","preference","filter","pref","handleSubmit","preventDefault","length","formDataToSend","FormData","append","JSON","stringify","response","fetch","method","body","ok","alert","console","container","header","backButton","content","imagePreview","placeholderImage","formSection","formGroup","fileInput","preferenceInput","addPreferenceButton","map","index","preferenceContainer","deletePreferenceButton","postButton"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\n\r\nconst NewItem = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    size: '',\r\n    condition: '',\r\n  });\r\n  const [image, setImage] = useState(null);\r\n  const [previewImage, setPreviewImage] = useState('');\r\n  const [preferences, setPreferences] = useState([]);\r\n  const [newPreference, setNewPreference] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setPreviewImage(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleAddPreference = () => {\r\n    if (newPreference.trim() && !preferences.includes(newPreference)) {\r\n      setPreferences((prev) => [...prev, newPreference]);\r\n      setNewPreference('');\r\n    }\r\n  };\r\n\r\n  const handleDeletePreference = (preference) => {\r\n    setPreferences((prev) => prev.filter((pref) => pref !== preference));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!formData.title || !formData.size || !formData.condition || !image || preferences.length === 0) {\r\n      setError('Please fill all fields.');\r\n      return;\r\n    }\r\n    setError('');\r\n\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append('title', formData.title);\r\n    formDataToSend.append('size', formData.size);\r\n    formDataToSend.append('condition', formData.condition);\r\n    formDataToSend.append('preferences', JSON.stringify(preferences));\r\n    formDataToSend.append('image', image);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/products', {\r\n        method: 'POST',\r\n        body: formDataToSend,\r\n      });\r\n      if (response.ok) {\r\n        alert('Product added successfully!');\r\n        navigate('/items');\r\n      } else {\r\n        alert('Failed to add product.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        <h2>New Item</h2>\r\n        <button onClick={() => navigate('/items')} className={styles.backButton}>\r\n          Go Back\r\n        </button>\r\n      </div>\r\n      <div className={styles.content}>\r\n        <div className={styles.imagePreview}>\r\n          {previewImage ? (\r\n            <img\r\n              src={previewImage}\r\n              alt=\"Preview\"\r\n              className={styles.previewImage}\r\n            />\r\n          ) : (\r\n            <div className={styles.placeholderImage}>No image selected</div>\r\n          )}\r\n        </div>\r\n        <div className={styles.formSection}>\r\n          <h3>Item Details</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            {error && <p className={styles.error}>{error}</p>}\r\n            <div className={styles.formGroup}>\r\n              <label>Title</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={formData.title}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n              <label>Size</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"size\"\r\n                value={formData.size}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n              <label>Condition</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"condition\"\r\n                value={formData.condition}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n              <label>Image</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageChange}\r\n                className={styles.fileInput}\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n              <label>Preferences</label>\r\n              <div className={styles.preferenceInput}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newPreference}\r\n                  onChange={(e) => setNewPreference(e.target.value)}\r\n                  placeholder=\"Add preference\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleAddPreference}\r\n                  className={styles.addPreferenceButton}\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n              <div className={styles.preferences}>\r\n                {preferences.map((pref, index) => (\r\n                  <div key={index} className={styles.preferenceContainer}>\r\n                    <span className={styles.preference}>{pref}</span>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleDeletePreference(pref)}\r\n                      className={styles.deletePreferenceButton}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" className={styles.postButton}>\r\n              Post\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewItem;\r\n"]},"metadata":{},"sourceType":"module"}