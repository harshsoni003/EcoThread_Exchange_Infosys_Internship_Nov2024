{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\Infosys\\\\EchThreadInfosys\\\\EcoThread_Exchange_Infosys_Internship_Nov2024\\\\Team6_EcoThreadExchange\\\\Sunil Kumar\\\\client\\\\src\\\\components\\\\PasswordReset\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, Fragment } from 'react';\nimport styles from './styles.module.css';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordReset = () => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [validUrl, setValidUrl] = useState(false);\n  const param = useParams();\n  const url = `http://localhost:8080/api/password-reset/${param.id}/${param.token}`;\n  useEffect(() => {\n    const verifyUrl = async () => {\n      try {\n        await axios.get(url);\n        setValidUrl(true);\n      } catch (error) {\n        setValidUrl(false);\n      }\n    };\n\n    verifyUrl();\n  }, [param, url]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await axios.post(url, {\n        password\n      });\n      setMsg(data.message);\n      setError(\"\");\n      window.location = \"/login\";\n    } catch (error) {\n      if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n        setError(error.response.data.message);\n        setMsg(\"\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: validUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form_container,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error_msg,\n          children: [error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 35\n        }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.success_msg,\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"404 Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PasswordReset, \"9TrHuBWGdX6YlQi+ra6O6lAH+vg=\", false, function () {\n  return [useParams];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["D:/Web/Infosys/EchThreadInfosys/EcoThread_Exchange_Infosys_Internship_Nov2024/Team6_EcoThreadExchange/Sunil Kumar/client/src/components/PasswordReset/index.jsx"],"names":["useState","useEffect","Fragment","styles","axios","useParams","PasswordReset","password","setPassword","msg","setMsg","error","setError","validUrl","setValidUrl","param","url","id","token","verifyUrl","get","handleSubmit","e","preventDefault","data","post","message","window","location","response","status","container","form_container","target","value","input","error_msg","success_msg"],"mappings":"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","sourcesContent":["import { useState, useEffect, Fragment } from 'react';\r\nimport styles from './styles.module.css';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst PasswordReset = () => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [validUrl, setValidUrl] = useState(false);\r\n    const param = useParams();\r\n    const url = `http://localhost:8080/api/password-reset/${param.id}/${param.token}`;\r\n    useEffect(() => {\r\n        const verifyUrl = async () => {\r\n            try {\r\n                await axios.get(url);\r\n                setValidUrl(true)\r\n            } catch (error) {\r\n                setValidUrl(false)\r\n            }\r\n        }\r\n        verifyUrl()\r\n    }, [param, url]);\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const { data } = await axios.post(url, { password });\r\n            setMsg(data.message);\r\n            setError(\"\");\r\n            window.location = \"/login\";\r\n        } catch (error) {\r\n            if (\r\n                error.response &&\r\n                error.response.status >= 400 &&\r\n                error.response.status <= 500\r\n            ) {\r\n                setError(error.response.data.message);\r\n                setMsg(\"\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {validUrl ? (\r\n                <div className={styles.container}>\r\n                    <form className={styles.form_container} onSubmit={handleSubmit} >\r\n                        <h1>Add New Password</h1>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            name=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            value={password}\r\n                            required\r\n                            className={styles.input}\r\n                        />\r\n                        {error && <div className={styles.error_msg}>{error} </div>}\r\n                        {msg && <div className={styles.success_msg}>{msg}</div>}\r\n                    </form>\r\n                </div>\r\n            ) : (\r\n                <h1>404 Not Found</h1>\r\n            )}\r\n        </Fragment>\r\n    )\r\n};\r\nexport default PasswordReset;"]},"metadata":{},"sourceType":"module"}