{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\Infosys\\\\EchThreadInfosys\\\\EcoThread_Exchange_Infosys_Internship_Nov2024\\\\Team6_EcoThreadExchange\\\\Sunil Kumar\\\\client\\\\src\\\\components\\\\ResetPassword\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport styles from \"./styles.module.css\";\nimport { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const location = useLocation();\n  const navigate = useNavigate(); // Extract email from the query string\n\n  const email = new URLSearchParams(location.search).get(\"email\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const url = `http://localhost:8080/api/password-reset/${email}`;\n      const {\n        data\n      } = await axios.post(url, {\n        password\n      });\n      setMsg(data.message);\n      setError(\"\"); // Redirect to login after successful password reset\n\n      navigate(\"/login\");\n    } catch (error) {\n      if (error.response && error.response.data) {\n        setError(error.response.data.message);\n        setMsg(\"\");\n      } else {\n        setError(\"Something went wrong. Please try again later.\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form_container,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        name: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password,\n        required: true,\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error_msg,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.success_msg,\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.green_btn,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResetPassword, \"Kcj/MvYhrN3gEmIyMtYAVM3vTRc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["D:/Web/Infosys/EchThreadInfosys/EcoThread_Exchange_Infosys_Internship_Nov2024/Team6_EcoThreadExchange/Sunil Kumar/client/src/components/ResetPassword/index.jsx"],"names":["axios","styles","useState","useLocation","useNavigate","ResetPassword","password","setPassword","error","setError","msg","setMsg","location","navigate","email","URLSearchParams","search","get","handleSubmit","e","preventDefault","url","data","post","message","response","container","form_container","target","value","input","error_msg","success_msg","green_btn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B,CALwB,CAOxB;;AACA,QAAMU,KAAK,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,EAAqCC,GAArC,CAAyC,OAAzC,CAAd;;AAEA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,YAAMC,GAAG,GAAI,4CAA2CP,KAAM,EAA9D;AACA,YAAM;AAAEQ,QAAAA;AAAF,UAAW,MAAMtB,KAAK,CAACuB,IAAN,CAAWF,GAAX,EAAgB;AAAEf,QAAAA;AAAF,OAAhB,CAAvB;AACAK,MAAAA,MAAM,CAACW,IAAI,CAACE,OAAN,CAAN;AACAf,MAAAA,QAAQ,CAAC,EAAD,CAAR,CAJA,CAMA;;AACAI,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACH,KARD,CAQE,OAAOL,KAAP,EAAc;AACZ,UAAIA,KAAK,CAACiB,QAAN,IAAkBjB,KAAK,CAACiB,QAAN,CAAeH,IAArC,EAA2C;AACvCb,QAAAA,QAAQ,CAACD,KAAK,CAACiB,QAAN,CAAeH,IAAf,CAAoBE,OAArB,CAAR;AACAb,QAAAA,MAAM,CAAC,EAAD,CAAN;AACH,OAHD,MAGO;AACHF,QAAAA,QAAQ,CAAC,+CAAD,CAAR;AACH;AACJ;AACJ,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAER,MAAM,CAACyB,SAAvB;AAAA,2BACI;AAAM,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,cAAxB;AAAwC,MAAA,QAAQ,EAAET,YAAlD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,WAAW,EAAC,cAFhB;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,QAAQ,EAAGC,CAAD,IAAOZ,WAAW,CAACY,CAAC,CAACS,MAAF,CAASC,KAAV,CAJhC;AAKI,QAAA,KAAK,EAAEvB,QALX;AAMI,QAAA,QAAQ,MANZ;AAOI,QAAA,SAAS,EAAEL,MAAM,CAAC6B;AAPtB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAWKtB,KAAK,iBAAI;AAAK,QAAA,SAAS,EAAEP,MAAM,CAAC8B,SAAvB;AAAA,kBAAmCvB;AAAnC;AAAA;AAAA;AAAA;AAAA,cAXd,EAYKE,GAAG,iBAAI;AAAK,QAAA,SAAS,EAAET,MAAM,CAAC+B,WAAvB;AAAA,kBAAqCtB;AAArC;AAAA;AAAA;AAAA;AAAA,cAZZ,eAaI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAET,MAAM,CAACgC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAnDD;;GAAM5B,a;UAIeF,W,EACAC,W;;;KALfC,a;AAqDN,eAAeA,aAAf","sourcesContent":["import axios from \"axios\";\r\nimport styles from \"./styles.module.css\";\r\nimport { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst ResetPassword = () => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [msg, setMsg] = useState(\"\");\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    // Extract email from the query string\r\n    const email = new URLSearchParams(location.search).get(\"email\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const url = `http://localhost:8080/api/password-reset/${email}`;\r\n            const { data } = await axios.post(url, { password });\r\n            setMsg(data.message);\r\n            setError(\"\");\r\n\r\n            // Redirect to login after successful password reset\r\n            navigate(\"/login\");\r\n        } catch (error) {\r\n            if (error.response && error.response.data) {\r\n                setError(error.response.data.message);\r\n                setMsg(\"\");\r\n            } else {\r\n                setError(\"Something went wrong. Please try again later.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <form className={styles.form_container} onSubmit={handleSubmit}>\r\n                <h1>Reset Password</h1>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"New Password\"\r\n                    name=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                    required\r\n                    className={styles.input}\r\n                />\r\n                {error && <div className={styles.error_msg}>{error}</div>}\r\n                {msg && <div className={styles.success_msg}>{msg}</div>}\r\n                <button type=\"submit\" className={styles.green_btn}>\r\n                    Reset Password\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}